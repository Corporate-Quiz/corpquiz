openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/users/me/:
    get:
      operationId: retrieveCustomUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/v1/quizes/:
    get:
      operationId: listQuizs
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quiz'
          description: ''
      tags:
      - api
  /api/v1/quizes/{id}/:
    get:
      operationId: retrieveQuiz
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quiz'
          description: ''
      tags:
      - api
  /api/v1/users/token/:
    post:
      operationId: createCustomTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
      tags:
      - api
  /api/v1/users/reset/:
    post:
      operationId: createCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserResetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResetPassword'
          description: ''
      tags:
      - api
  /api/v1/users/create/:
    post:
      operationId: createCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/v1/quizes/statistic/:
    post:
      operationId: collectStatisticStatisticViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    UserCreate:
      type: object
      properties:
        firstName:
          type: string
          maxLength: 150
        lastName:
          type: string
          maxLength: 150
        position:
          type: string
          maxLength: 150
        role:
          enum:
          - AD
          - EMP
          type: string
        patronymic:
          type: string
          maxLength: 150
        department:
          type: string
        email:
          type: string
          format: email
          maxLength: 254
        avatar:
          type: string
          format: binary
        score:
          type: integer
          nullable: true
          description: score
      required:
      - firstName
      - lastName
      - position
      - department
      - email
      - avatar
    Quiz:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: binary
        description:
          type: string
          maxLength: 240
        directory:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 200
        duration:
          type: integer
        level:
          type: string
          readOnly: true
        question_amount:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 50
              color:
                type: string
                maxLength: 7
            required:
            - name
          readOnly: true
        questions:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              image:
                type: string
                format: binary
              text:
                type: string
                maxLength: 240
              answers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    text:
                      type: string
                      maxLength: 240
                    image:
                      type: string
                      format: binary
                    isAnswerRight:
                      type: boolean
                  required:
                  - text
                  - isAnswerRight
                readOnly: true
            required:
            - text
          readOnly: true
        volumes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                maxLength: 200
              description:
                type: string
                maxLength: 240
            required:
            - name
            - description
          readOnly: true
        isPassed:
          type: boolean
        appointed:
          type: boolean
      required:
      - description
      - name
      - duration
      - isPassed
      - appointed
    CustomTokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
        role:
          type: string
      required:
      - email
      - password
      - role
    UserResetPassword:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
